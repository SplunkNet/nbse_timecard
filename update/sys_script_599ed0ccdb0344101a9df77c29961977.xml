<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>false</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_nyk_nbse_time_ca_nbse_assignment</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Calculate Time for Assignment Delete</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/*
 * Author: Gulzar Manuja 02/13/2020
 * Purpose of this Business Rule is to calculate the assignment changes and update
 * the regular days (mon_reg, tue_reg, ... ) of the timesheet for assignment deletes
 */

(function executeRule(current, previous /*null when async*/) {
	
	var TABLE_TIMESHEET = 'x_nyk_nbse_time_ca_nbse_timesheet';
	var ts = new GlideRecord(TABLE_TIMESHEET);
	
	var weekDays = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];
	
	//timesheetReg array stores regular hours for each day of the timesheet
	var timesheetReg = [previous.timesheet.mon_reg, previous.timesheet.tue_reg, previous.timesheet.wed_reg, previous.timesheet.thu_reg, previous.timesheet.fri_reg, previous.timesheet.sat_reg, previous.timesheet.sun_reg];
	
	var newReg;
	if (ts.get(previous.timesheet)) {
		
		for (var w in weekDays) {
			// newReg will store the new Regular hours for each day of the week
			// by subtracting the deleting assignment hours from the current timesheet regular hours
			newReg = parseFloat(timesheetReg[w]) - parseFloat(previous.getValue(weekDays[w]));
			if (!newReg || newReg < 0)
				newReg = 0;
			ts.setValue(weekDays[w]+'_reg', newReg);
		}
		ts.update();
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>MANUJAG</sys_created_by>
        <sys_created_on>2020-02-13 16:22:18</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>599ed0ccdb0344101a9df77c29961977</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Calculate Time for Assignment Delete</sys_name>
        <sys_overrides/>
        <sys_package display_value="NBSE Time Card" source="x_nyk_nbse_time_ca">00e16545dbf604901a9df77c2996198a</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="NBSE Time Card">00e16545dbf604901a9df77c2996198a</sys_scope>
        <sys_update_name>sys_script_599ed0ccdb0344101a9df77c29961977</sys_update_name>
        <sys_updated_by>MANUJAG</sys_updated_by>
        <sys_updated_on>2020-02-13 16:22:18</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
</record_update>
