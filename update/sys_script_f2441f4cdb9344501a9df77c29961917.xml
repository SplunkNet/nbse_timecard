<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_nyk_nbse_time_ca_nbse_user_profile</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_nyk_nbse_time_ca_nbse_user_profile">allow_reporting_accessVALCHANGES^EQ<item endquery="false" field="allow_reporting_access" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Manage Reporting Access</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var PROPERTY_NAME = 'x_nyk_nbse_time_ca.report_group';
	var FIELD_NAME = 'allow_reporting_access'; 
	
	var groupSysID = getGroupSysID(PROPERTY_NAME);
	var gr = new GlideRecord('sys_user_grmember');
    if (groupSysID && groupSysID !== '' && groupSysID != undefined) {
        if (current.getValue(FIELD_NAME) == true) {
			// This will invoke the 'NBSE Timesheet - Group Add' script action in Global Scope
			// Although this can be done in app's scope
			// In order to keep the symmetry with Removal code
			// We've created this script action in global as well
			gs.eventQueue('x_nyk_nbse_time_ca.group_add', current, groupSysID, current.user.sys_id);			
		}else {
			// This will invoke the 'NBSE Timesheet - Group Remove' script action in Global Scope
			// Because user can't be removed from an app's scope
			gs.eventQueue('x_nyk_nbse_time_ca.group_remove', current, groupSysID, current.user.sys_id);
		}
	}
})(current, previous);

function getGroupSysID(propName) {
	var groupName = gs.getProperty(propName);
	if (!groupName || groupName === '' || groupName == undefined)
		return;
    var groupGr = new GlideRecord('sys_user_group');
    groupGr.addEncodedQuery('name=' + groupName);
    groupGr.query();
	if (groupGr.next()) {
		return groupGr.getValue('sys_id');
	}
}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>GARGL</sys_created_by>
        <sys_created_on>2020-02-26 15:50:03</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f2441f4cdb9344501a9df77c29961917</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Manage Reporting Access</sys_name>
        <sys_overrides/>
        <sys_package display_value="NBSE Time Card" source="x_nyk_nbse_time_ca">00e16545dbf604901a9df77c2996198a</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="NBSE Time Card">00e16545dbf604901a9df77c2996198a</sys_scope>
        <sys_update_name>sys_script_f2441f4cdb9344501a9df77c29961917</sys_update_name>
        <sys_updated_by>GARGL</sys_updated_by>
        <sys_updated_on>2020-02-26 16:06:21</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
</record_update>
